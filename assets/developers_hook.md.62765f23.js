import{_ as s,c as a,o as n,b as l}from"./app.deb52274.js";const A=JSON.parse('{"title":"Hook","description":"","frontmatter":{},"headers":[{"level":2,"title":"Hook 사용하기 (리스너 등록)","slug":"hook-사용하기-리스너-등록","link":"#hook-사용하기-리스너-등록","children":[{"level":3,"title":"함수를 리스너로 등록","slug":"함수를-리스너로-등록","link":"#함수를-리스너로-등록","children":[]},{"level":3,"title":"메소드를 리스너로 등록","slug":"메소드를-리스너로-등록","link":"#메소드를-리스너로-등록","children":[]},{"level":3,"title":"클래스 생성자를 리스너로 등록","slug":"클래스-생성자를-리스너로-등록","link":"#클래스-생성자를-리스너로-등록","children":[]}]},{"level":2,"title":"Hook 추가","slug":"hook-추가","link":"#hook-추가","children":[]},{"level":2,"title":"기타","slug":"기타","link":"#기타","children":[]}],"relativePath":"developers/hook.md","lastUpdated":1674063898000}'),o={name:"developers/hook.md"},p=l(`<h1 id="hook" tabindex="-1">Hook <a class="header-anchor" href="#hook" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#hook-사용하기-리스너-등록">Hook 사용하기 (리스너 등록)</a><ul><li><a href="#함수를-리스너로-등록">함수를 리스너로 등록</a></li><li><a href="#메소드를-리스너로-등록">메소드를 리스너로 등록</a></li><li><a href="#클래스-생성자를-리스너로-등록">클래스 생성자를 리스너로 등록</a></li></ul></li><li><a href="#hook-추가">Hook 추가</a></li><li><a href="#기타">기타</a></li></ul></nav><p>그누보드5는 기능 확장 방법으로 Hook을 지원한다.</p><p>코드가 실행되는 중에 끼어들어 추가 동작을 실행하거나 값을 변경해주는 역할을 한다. <strong>Envent</strong>와 <strong>Replace</strong> 두 가지 유형을 제공하고 둘의 방식은 같지만 Replace는 인자로 전달받은 값을 가공해서 반환하면 이후 동작에 반영된다.</p><p>Hook은 고유한 이름이 있으며 Hook <code>Tag</code>로 부른다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Hook 목록은 따로 제공하지 않으며 그누보드 전체 파일에서 <code>run_event</code>와 <code>run_replace</code>를 검색해서 찾아볼 수 있다.</p></div><details class="details custom-block"><summary>그누보드 5.4 버전 이상에서만 지원</summary><p>Hook 기능은 2019년에 배포된 그누보드 5.4 버전부터 지원하며 이전 버전에서는 Hook을 사용할 수 없다.</p><p>그누보드 5.4 이후 버전이라도 사용하려는 Hook Tag가 추가되지 않은 버전일 수 있다.</p></details><h2 id="hook-사용하기-리스너-등록" tabindex="-1">Hook 사용하기 (리스너 등록) <a class="header-anchor" href="#hook-사용하기-리스너-등록" aria-hidden="true">#</a></h2><p>Hook이 동작할 때 실행될 함수(콜백, Listener)를 등록해두면 해당 이벤트가 발생할 때 등록한 함수를 호출하여 실행한다.</p><p>Hook 유형에 따라 <code>add_event()</code>와 <code>add_replace()</code> 두 가지 함수를 사용하고, <code>add_replace()</code>는 반환하는 값이 결과에 반영된다는 것 외에는 같다.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Evnet Hook에 리스너 등록</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#F78C6C;font-style:italic;">string</span><span style="color:#676E95;font-style:italic;"> $tag Hook 이름</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#FFCB6B;font-style:italic;">callable</span><span style="color:#676E95;font-style:italic;"> $callback 실행될 함수, 메소드, 클래스</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#F78C6C;font-style:italic;">int</span><span style="color:#676E95;font-style:italic;"> $priority 실행 우선 순위</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *            기본 값인 G5_HOOK_DEFAULT_PRIORITY는 int(8)이다</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#F78C6C;font-style:italic;">int</span><span style="color:#676E95;font-style:italic;"> $args 콜백에 전달될 인자의 갯수</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@return</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#F78C6C;font-style:italic;">void</span><span style="color:#676E95;font-style:italic;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#82AAFF;">add_event</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">callback</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">priority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">args </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Replace Hook에 리스너 등록</span></span>
<span class="line"><span style="color:#82AAFF;">add_replace</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">callback</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">priority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">args </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?true;</span></span>
<span class="line"></span></code></pre></div><h3 id="함수를-리스너로-등록" tabindex="-1">함수를 리스너로 등록 <a class="header-anchor" href="#함수를-리스너로-등록" aria-hidden="true">#</a></h3><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 두 번째 인자에 실행할 함수명을 문자열로 지정</span></span>
<span class="line"><span style="color:#82AAFF;">add_event</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common_header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listenerCommonHeader</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">listenerCommonHeader</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... 실행할 코드</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Event Hook은 결과를 반환하지 않아도 된다</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="메소드를-리스너로-등록" tabindex="-1">메소드를 리스너로 등록 <a class="header-anchor" href="#메소드를-리스너로-등록" aria-hidden="true">#</a></h3><p>메소드를 리스너로 등록할 때는 해당 메소드가 포함된 Class가 <code>getInstance()</code> 정적 메소드(static)를 포함해야한다. Hook은 <code>getInstance()</code>를 실행하여 객체를 반환받아 지정한 메소드를 실행한다.</p><details class="details custom-block"><summary>getInstance()</summary><p>보통 Singleton 클래스를 작성하는 방법으로 <code>getInstance</code> 이름을 사용하여 클래스 자신의 인스턴스를 생성하여 반환해야한다.</p></details><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#82AAFF;">add_replace</span><span style="color:#89DDFF;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">board_content_head</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listenerBoardContentHead</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyHookListenerClass</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 실행될 메소드</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">listenerBoardContentHead</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">arg1</span><span style="color:#89DDFF;">)</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ... 실행할 코드</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">arg1</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>리스너로 등록하려는 메소드의 클래스는 Hook이 동작될 때 마다 <code>getInstance()</code> static 메소드를 호출한다.</p><p>기존 클래스에 메소드를 추가해서 리스너로 등록할 때 다중 인스턴스로 인한 사이드 이펙트에 주의해야하며, Hook 리스너를 모아둔 개별 클래스를 따로 두는 것도 좋다.</p></div><h3 id="클래스-생성자를-리스너로-등록" tabindex="-1">클래스 생성자를 리스너로 등록 <a class="header-anchor" href="#클래스-생성자를-리스너로-등록" aria-hidden="true">#</a></h3><p>TBD 인스턴스가 생성됨. replace hook 사용에는 적절하지 않음.</p><h2 id="hook-추가" tabindex="-1">Hook 추가 <a class="header-anchor" href="#hook-추가" aria-hidden="true">#</a></h2><p>TBD</p><ul><li>run_event()</li><li>run_replace()</li></ul><h2 id="기타" tabindex="-1">기타 <a class="header-anchor" href="#기타" aria-hidden="true">#</a></h2><p>TBD</p><ul><li>delete_event()</li><li>delete_replace()</li></ul>`,26),e=[p];function t(c,r,i,y,D,F){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
