import{_ as s,c as a,o as n,a as l}from"./app.a61a969e.js";const A=JSON.parse('{"title":"Hook","description":"","frontmatter":{},"headers":[{"level":2,"title":"Hook 사용하기","slug":"hook-사용하기","link":"#hook-사용하기","children":[{"level":3,"title":"함수를 리스너로 등록","slug":"함수를-리스너로-등록","link":"#함수를-리스너로-등록","children":[]},{"level":3,"title":"메소드를 리스너로 등록","slug":"메소드를-리스너로-등록","link":"#메소드를-리스너로-등록","children":[]}]},{"level":2,"title":"Hook 추가","slug":"hook-추가","link":"#hook-추가","children":[]}],"relativePath":"developers/hook.md","lastUpdated":1674052204000}'),p={name:"developers/hook.md"},o=l(`<h1 id="hook" tabindex="-1">Hook <a class="header-anchor" href="#hook" aria-hidden="true">#</a></h1><p>그누보드5는 기능 확장 방법으로 Hook을 지원한다.</p><p>이벤트 시점에 동작을 실행시킬 수 있는 Event와 전달받은 값을 가공해서 돌려주면 데이터를 교체하는 Replace 두 가지 유형을 제공한다. Event/Replace Hook의 사용법은 같고 Replace가 반환한 값으로 교체하여 반영해주느냐의 차이가 있다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Event와 Replace 목록은 별도로 제공하지 않으며 그누보드 전체 파일에서 <code>run_event</code>와 <code>run_replace</code>로 검색해서 찾아볼 수 있다.</p></div><details class="details custom-block"><summary>그누보드 5.4 버전 이상에서만 지원</summary><p>Hook 기능은 2019년에 배포된 그누보드 5.4 버전부터 지원하며, 그 이전 버전에서는 Hook을 사용할 수 없다.</p><p>5.4 이후 버전이라도 사용하려는 Hook Tag가 추가된 버전을 확인해야한다.</p></details><h2 id="hook-사용하기" tabindex="-1">Hook 사용하기 <a class="header-anchor" href="#hook-사용하기" aria-hidden="true">#</a></h2><p>Hook이 동작될 때 실행될 함수(Listener, 콜백 함수)를 등록해두고 해당 이벤트가 발생할 때 등록한 함수를 호출하여 실행한다.</p><p>Hook 유형에 따라 <code>add_event()</code>와 <code>add_replace()</code> 두 가지 함수를 사용하고, <code>add_replace()</code>는 반환하는 값이 결과에 반영된다는 것 외에는 같다.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Evnet Hook에 리스너 등록</span></span>
<span class="line"><span style="color:#82AAFF;">add_event</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> callable </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">callback</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">priority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">args </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Replace Hook에 리스너 등록</span></span>
<span class="line"><span style="color:#82AAFF;">add_replace</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> callable </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">callback</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">priority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">args </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?true;</span></span>
<span class="line"></span></code></pre></div><h3 id="함수를-리스너로-등록" tabindex="-1">함수를 리스너로 등록 <a class="header-anchor" href="#함수를-리스너로-등록" aria-hidden="true">#</a></h3><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 두 번째 인자에 실행할 함수명을 문자열로 지정</span></span>
<span class="line"><span style="color:#82AAFF;">add_event</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common_header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listenerCommonHeader</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">listenerCommonHeader</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... 실행할 코드</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="메소드를-리스너로-등록" tabindex="-1">메소드를 리스너로 등록 <a class="header-anchor" href="#메소드를-리스너로-등록" aria-hidden="true">#</a></h3><p>메소드를 리스너로 등록할 때는 해당 Class가 <code>getInstance()</code> 정적 메소드(static)를 포함해야한다.</p><details class="details custom-block"><summary>getInstance()</summary><p>보통 Singleton 클래스를 작성하는 방법으로 <code>getInstance</code> 이름을 사용하여 클래스 자신의 인스턴스를 반환한다.</p></details><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#82AAFF;">add_replace</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">board_content_head</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listenerBoardContentHead</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> G5_HOOK_DEFAULT_PRIORITY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyHookListenerClass</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#C792EA;">static</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">static</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 실행될 메소드</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">listenerBoardContentHead</span><span style="color:#89DDFF;">()</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ... 실행할 코드</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>리스너로 등록하려는 클래스는 Hook이 실행될 때 마다 <code>getInstance()</code> 메소드를 실행시키고 인스턴스를 반환 받는다.</p><p>기존 클래스에 메소드를 추가해서 리스너로 등록할 때 다중 인스턴스로 인한 사이드 이펙트에 주의해야하며, 가능하다면 Hook 리스너를 위한 개별 클래스를 따로 두는 것도 좋다.</p></div><details class="details custom-block"><summary>콜백으로 지정가능한 제한된 방법</summary><p>두번째 인자의 callback은 제한된 callable 타입을 지원한다. PHP버전에 따라 지원하는 문법 차이도 있다(<code>className::class</code>).</p><p>가능한 방법</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// 함수</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myListenerMethod</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 메소드</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyHookListenerClass</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Namespace</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Namespace\\MyHookListenerClass</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 클래스만 지정하면 클래스 인스턴스를 생성한다.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 생성자에서 기능을 구현하면되지만 생성자에서는 Replace Hook에서 필요한 값을 반환할 수 없다.</span></span>
<span class="line"><span style="color:#A6ACCD;">Namespace</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> 또는 </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Namespace\\MyHookListenerClass</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>지원되지않는 방법</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 익명함수나 arrow-function도 지원하지 않는다</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 생성된 인스턴스는 Hook을 호출하지 못한다</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> Namespace</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">MyHookListenerClass</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div></details><h2 id="hook-추가" tabindex="-1">Hook 추가 <a class="header-anchor" href="#hook-추가" aria-hidden="true">#</a></h2><ul><li>run_event()</li><li>run_replace()</li><li>delete_event()</li><li>delete_replace()</li><li>get_hook_datas()</li></ul>`,19),e=[o];function t(c,r,D,y,F,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
